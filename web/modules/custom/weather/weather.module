<?php

/**
 * @file
 * Primary module hooks for weather module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\weather\Entity\WeatherEntity;

/**
 * Implements hook_theme().
 */
function weather_theme() {
  return [
    'weather' => [
      'variables' => [
        'name' => NULL,
        'temperature' => NULL,
        'icon' => NULL,
      ],
    ],
  ];
}

/**
 * Example of adding variables with preprocess.
 */
function weather_preprocess_weather(&$variables) {

  $variable_name = 'example of preprocess';
  $variables['preprocess_example'] = $variable_name;

}

/**
 * Implements hook_cron().
 */
function weather_cron() {
  $weather_entityes = \Drupal::entityTypeManager()
    ->getStorage('weather_entity')
    ->loadMultiple();
  foreach ($weather_entityes as $item) {
    $location = $item->get('location')->getValue();
    $get_weather_for_item = \Drupal::service('weather.get_data')
      ->getWeatherEntity($location);
    if (!empty($get_weather_for_item)) {
      $item->set('temperature', $get_weather_for_item['current']['temp_c']);
      $item->set('condition', $get_weather_for_item['current']['condition']['text']);
      $item->set('image', $get_weather_for_item['current']['condition']['icon']);
      $item->save();
    }
  }
}

/**
 * Implements hook_entity_presave().
 */
function weather_taxonomy_term_presave(EntityInterface $entity) {
  $get_taxonomy_name = $entity->get('vid')->getValue();
  // Get location from taxonomy field.
  if ($get_taxonomy_name[0]['target_id'] == 'location') {
    $get_location = $entity->get('name')->getValue();
    $location = $get_location[0]['value'] ?? "";
    // Get weather entity's and check has entity same label if not add it.
    $get_weather_entitys = _get_all_entityes('weather_entity');
    foreach ($get_weather_entitys as $item) {
      $location_weather_entity = $item->get('location')->getValue();
      if ($location_weather_entity == $location) {
        return FALSE;
      }
    }
    // Create new entity type and save it to term field.
    $new_entity = WeatherEntity::create([
      'label' => $location,
      'location' => $location,
    ]);
    $new_entity->save();
    $entity->set('field_location', $new_entity);
    return $entity;
  }

}

/**
 * Get all created entity's.
 */
function _get_all_entityes($name) {
  $entityes = \Drupal::entityTypeManager()
    ->getStorage($name)
    ->loadMultiple();
  return $entityes;
}
